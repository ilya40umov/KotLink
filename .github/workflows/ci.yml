name: CI

on:
  push:
    branches:
      - 'master'
    tags:
      - '**'
  pull_request:
    branches:
      - 'master'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Run Tests & Build JAR
      run: ./gradlew clean build jacocoTestReport
    - name: Upload JAR File
      uses: actions/upload-artifact@v2
      with:
        name: jar_file
        path: server-spring/build/libs/kotlink.jar
    - name: Report Detekt Issues
      if: github.ref == 'refs/heads/master'
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: build/reports/detekt/detekt.sarif
    - name: Report Code Coverage
      uses: codecov/codecov-action@v1
  docker-image-for-master:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Download JAR File
        uses: actions/download-artifact@v2
        with:
          name: jar_file
          path: server-spring/build/libs/
      - name: Login To DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: ./server-spring/
          platforms: linux/amd64
          push: true
          tags: ilya40umov/kotlink:develop
  docker-image-for-tag:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Download JAR File
        uses: actions/download-artifact@v2
        with:
          name: jar_file
          path: server-spring/build/libs/
      - name: Login To DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ilya40umov/kotlink
      - name: Compute Tag Name
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: ./server-spring/
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}