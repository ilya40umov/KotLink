redis-ha:
  fullnameOverride: redis
  image:
    repository: redis
    tag: 5.0.5-alpine
    pullPolicy: IfNotPresent
  replicas: 3
  hardAntiAffinity: false

postgresql:
  fullnameOverride: postgres
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 10.10.0-debian-9-r63
  postgresqlDatabase: kotlink
  postgresqlUsername: kotlinkuser
  postgresqlPassword: kotlinkpass

image:
  repository: registry.hub.docker.com/ilya40umov/kotlink
  tag: latest
  pullPolicy: Always

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name:

# TODO read https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

podSecurityContext: {}
#   fsGroup: 2000

securityContext: {}
#   capabilities:
#     drop:
#     - ALL
#   readOnlyRootFilesystem: true
#   runAsNonRoot: true
#   runAsUser: 1000

service:
  type: NodePort
  port: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: local.kotlink.org
      paths:
        - /
  tls:
    - secretName: self-signed
      hosts:
        - local.kotlink.org

secret:
  google_oauth_client_id: 115327279391-cqrf3suvt416skdkr8lqvdntgfa90epg.apps.googleusercontent.com
  google_oauth_client_secret: SZDICodbaLAkNXjbFKfOFZCO
  actuator_user_name: kotlink_actuator
  actuator_user_password: kotlink_actuator

deployment:
  rollingUpdate:
    maxSurge: 50%
    maxUnavailable: 50%
  minReadySeconds: 30
  terminationGracePeriodSeconds: 10
  resources:
    limits:
      cpu: 2
      memory: 1.5Gi
    requests:
      cpu: 1
      memory: 1.5Gi

nodeSelector: {}

tolerations: []

affinity: {}